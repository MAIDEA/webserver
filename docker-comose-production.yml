#PRIMJER produkcijskog YML-a
# radi sa nginx proxy-em i automatski dohvaca SSL preko letsEncrypt-a

version: '2'
services:
  nginx-proxy: # nginx proxy container expose-an prema van
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
     - /var/run/docker.sock:/tmp/docker.sock:ro
     #aditional volumes for letsEncrypt
     - ./certificates:/etc/nginx/certs:ro
     - /etc/nginx/vhost.d
     - /usr/share/nginx/html

  letsencrypt-nginx-proxy-companion: # dodatak na nginx proxy koji omogucava automatski letsEncrypt SSL
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: letsencrypt-nginx-proxy-companion
    volumes_from:
      - nginx-proxy
    volumes:
     - /var/run/docker.sock:/var/run/docker.sock:ro
     - ./certificates:/etc/nginx/certs:rw
#    environment:
#     - DEBUG=true






	
  merkur-web: # glavni Web app container
    build: .
    environment: #obavezno promjeniti
     - VIRTUAL_HOST=webserver_test.maidea.hr
     - LETSENCRYPT_HOST=webserver_test.maidea.hr
     - LETSENCRYPT_EMAIL=example@example.com
     - LETSENCRYPT_TEST=true # lets encrypt staging environment

    volumes:
     - "./src:/src"
     - "./.log:/var/log"
    expose:
     - "80"
    links:
     - "DB-container:mysql"

  DB-container: #database container ovdje kao primjer, exposean prema van
    image: 'percona:5'
    environment:
     - MYSQL_ROOT_PASSWORD=password
    volumes:
      - "./data/database:/var/lib/mysql"
    ports:
      - "3306:3306"
